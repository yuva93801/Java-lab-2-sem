package lab5;

class Thread1 extends Thread {
    public void run() {
        for (int i = 0; i <= 5; i++) {
            // Check if the thread has been interrupted
            if (Thread.currentThread().isInterrupted()) {
                System.out.println("Thread 1 interrupted");
                return; // Exit the loop and end the thread
            }
            System.out.println("Thread 1: " + i);
            try {
                Thread.sleep(2000);
            } catch (InterruptedException e) {
                System.out.println("Thread 1 interrupted during sleep");
                return; // Exit the thread
            }
        }
    }
}

class Thread2 extends Thread {
    public void run() {
        for (int i = 10; i <= 20; i++) {
            // Check if the thread has been interrupted
            if (Thread.currentThread().isInterrupted()) {
                System.out.println("Thread 2 interrupted");
                return; // Exit the loop and end the thread
            }
            System.out.println("Thread 2: " + i);
            try {
                Thread.sleep(2000);
            } catch (InterruptedException e) {
                System.out.println("Thread 2 interrupted during sleep");
                return; // Exit the thread
            }
        }
    }
}

public class Main {
    public static void main(String[] args) throws Exception {
        Thread1 t1 = new Thread1();
        Thread2 t2 = new Thread2();

        t1.start(); // Start Thread1
        t2.start(); // Start Thread2
        
        // Interrupt only Thread1
        Thread.sleep(100); // Small delay to ensure Thread1 has started
        t1.interrupt(); // Interrupt Thread1
        
        // Optional: Wait for threads to finish if needed
        t1.join();
        t2.join();
    }
}
